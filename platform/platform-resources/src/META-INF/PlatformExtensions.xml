<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <extensions defaultExtensionNs="com.intellij">

    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>

    <appStarter id="reopen" implementation="com.intellij.ui.win.RecentProjectApplication"/>
    <appStarter id="update" implementation="com.intellij.openapi.command.impl.UpdatePluginsApp"/>
    <appStarter id="listBundledPlugins" implementation="com.intellij.ide.plugins.BundledPluginsLister"/>
    <appStarter id="installPlugins" implementation="com.intellij.ide.plugins.HeadlessPluginsInstaller"/>
    <appStarter id="generateEnvironmentKeysFile" implementation="com.intellij.ide.environment.impl.EnvironmentKeyStubGenerator"/>
    <appStarter id="dumpActions" implementation="com.intellij.internal.statistic.utils.DumpActionsAppStarter"/>

    <themeProvider id="Darcula" path="/themes/darcula.theme.json" targetUi="classic"/>

    <welcomeFrameProvider implementation="com.intellij.openapi.wm.impl.welcomeScreen.FlatWelcomeFrameProvider"/>

    <applicationService serviceInterface="com.intellij.openapi.application.CoroutineSupport"
                        serviceImplementation="com.intellij.openapi.application.impl.PlatformCoroutineSupport"/>

    <applicationService serviceInterface="com.intellij.openapi.application.ApplicationInfo"
                        serviceImplementation="com.intellij.openapi.application.impl.ApplicationInfoServiceDelegate"/>

    <applicationService serviceInterface="com.intellij.openapi.components.impl.stores.IComponentStore"
                        serviceImplementation="com.intellij.configurationStore.ApplicationStoreImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.components.PathMacroManager"
                        serviceImplementation="com.intellij.configurationStore.ApplicationPathMacroManager"/>

    <applicationService serviceImplementation="com.intellij.util.net.ssl.CertificateManager" preload="await"/>

    <applicationService serviceInterface="com.intellij.util.net.ssl.InitialUntrustedCertificateStrategyProvider"
                        serviceImplementation="com.intellij.util.net.ssl.DefaultInitialUntrustedCertificateStrategyProvider"/>

    <applicationService serviceInterface="com.intellij.util.net.ssl.OsCertificatesService"
                        serviceImplementation="com.intellij.util.net.ssl.OsCertificatesServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.newvfs.ManagingFS"
                        serviceImplementation="com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.colors.EditorColorsManager"
                        serviceImplementation="com.intellij.openapi.editor.colors.impl.EditorColorsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.ui.IdeUiService"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.IdeUiServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.vfs.VirtualFileManager"
                        serviceImplementation="com.intellij.openapi.vfs.PlatformVirtualFileManager"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.pointers.VirtualFilePointerManager"
                        serviceImplementation="com.intellij.openapi.vfs.impl.VirtualFilePointerManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.ui.IdeUICustomization" preload="notHeadless"/>

    <!-- FileTypeManagerImpl wants PropertiesComponent -->
    <applicationService serviceInterface="com.intellij.ide.util.PropertiesComponent"
                        serviceImplementation="com.intellij.ide.util.AppPropertyService" preload="true"/>
    <projectService serviceInterface="com.intellij.ide.util.PropertiesComponent"
                    serviceImplementation="com.intellij.ide.util.ProjectPropertyService"/>

    <applicationService serviceInterface="com.intellij.openapi.fileTypes.FileTypeManager"
                        serviceImplementation="com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl"/>
    <vfs.asyncListener implementation="com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl$MyAsyncVfsListener"/>

    <persistentFsConnectionListener implementation="com.intellij.openapi.fileTypes.impl.IgnoredFileCacheCleaner"/>

    <applicationService serviceImplementation="com.intellij.util.net.HttpConfigurable" preload="true"/>
    <applicationService serviceImplementation="com.intellij.ide.ClipboardSynchronizer" preload="true"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapManager"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.project.ProjectManager"
                        serviceImplementation="com.intellij.openapi.project.impl.ProjectManagerImpl"
                        testServiceImplementation="com.intellij.project.TestProjectManager"/>

    <applicationService serviceInterface="com.intellij.openapi.options.SchemeManagerFactory"
                        serviceImplementation="com.intellij.configurationStore.schemeManager.SchemeManagerFactoryBase$ApplicationSchemeManagerFactory"/>
    <projectService serviceInterface="com.intellij.openapi.options.SchemeManagerFactory"
                    serviceImplementation="com.intellij.configurationStore.schemeManager.SchemeManagerFactoryBase$ProjectSchemeManagerFactory"/>


    <applicationService serviceImplementation="com.intellij.openapi.keymap.impl.DefaultKeymap"/>

    <!-- listen VFS_CHANGES - it is core service, so, don't want use lazy message bus listener without a reason -->
    <applicationService serviceInterface="com.intellij.openapi.command.undo.DocumentReferenceManager"
                        serviceImplementation="com.intellij.openapi.command.impl.DocumentReferenceManagerImpl"/>

    <applicationService serviceInterface="com.intellij.diagnostic.PerformanceWatcher"
                        serviceImplementation="com.intellij.diagnostic.PerformanceWatcherImpl"/>

    <applicationService serviceImplementation="com.intellij.diagnostic.LowMemoryNotifier" preload="true"/>

    <backgroundPostStartupActivity implementation="com.intellij.diagnostic.IdeHeartbeatEventReporter"/>

    <applicationService serviceInterface="com.intellij.ide.plugins.PluginManagerConfigurableService"
                        serviceImplementation="com.intellij.ide.plugins.PluginManagerConfigurableServiceImpl"/>


    <applicationService serviceImplementation="com.intellij.ui.jcef.JBCefStartup" preload="notHeadless" os="mac"/>
    <cachesInvalidator implementation="com.intellij.ui.jcef.JBCefAppCacheInvalidator" order="last"/>



    <applicationService serviceInterface="com.intellij.openapi.wm.impl.FrameTitleBuilder"
                        serviceImplementation="com.intellij.openapi.wm.impl.PlatformFrameTitleBuilder"/>

    <applicationService serviceInterface="com.intellij.openapi.actionSystem.ActionUpdaterInterceptor"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.ActionUpdaterInterceptorImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.options.ShowSettingsUtil"
                        serviceImplementation="com.intellij.ide.actions.ShowSettingsUtilImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.FileChooserFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.impl.FileChooserFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileChooser.ClientFileChooserFactory"
                        serviceImplementation="com.intellij.openapi.fileChooser.impl.LocalFileChooserFactory" client="local"/>
    <applicationService serviceInterface="com.intellij.openapi.progress.ProgressManager"
                        serviceImplementation="com.intellij.openapi.progress.impl.ProgressManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.ide.ui.customization.CustomActionsSchema"/>
    <applicationService serviceInterface="com.intellij.ide.ui.ProductIcons"
                        serviceImplementation="com.intellij.ide.impl.ui.ProductIconsImpl"/>


    <applicationService serviceInterface="com.intellij.openapi.command.CommandProcessor"
                        serviceImplementation="com.intellij.openapi.command.impl.CommandProcessorImpl"/>

    <applicationService serviceInterface="com.intellij.ide.CommonActionsManager"
                        serviceImplementation="com.intellij.ide.impl.CommonActionsManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.ide.CopyPasteManager"
                        serviceImplementation="com.intellij.ide.CopyPasteManagerEx"/>
    <applicationService serviceInterface="com.intellij.ide.ClientCopyPasteManager"
                        serviceImplementation="com.intellij.ide.LocalCopyPasteManager"
                        client="local"/>
    <applicationService serviceInterface="com.intellij.openapi.ui.popup.JBPopupFactory"
                        serviceImplementation="com.intellij.ui.popup.PopupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.fileEditor.ex.FileEditorProviderManager"
                        serviceImplementation="com.intellij.openapi.fileEditor.impl.FileEditorProviderManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.ui.search.SearchableOptionsRegistrar"
                        serviceImplementation="com.intellij.ide.ui.search.SearchableOptionsRegistrarImpl"/>
    <search.optionContributor implementation="com.intellij.ide.ui.search.PluginSearchableOptionContributor"/>


    <applicationService serviceImplementation="com.intellij.openapi.fileEditor.impl.EditorEmptyTextPainter"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.EditorCopyPasteHelper"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorCopyPasteHelperImpl"/>

    <actionConfigurationCustomizer implementation="com.intellij.openapi.actionSystem.ex.QuickListsManager$QuickListActionCustomizer"/>


    <applicationService serviceInterface="com.intellij.openapi.util.registry.RegistryManager"
                        serviceImplementation="com.intellij.openapi.util.registry.RegistryManagerImpl"/>

    <applicationService serviceImplementation="com.intellij.ui.popup.LocalPopupComponentFactory"
                        serviceInterface="com.intellij.ui.popup.PopupComponentFactory"
                        client="all"/>
    <applicationService serviceInterface="com.intellij.ui.content.ContentFactory"
                        serviceImplementation="com.intellij.ui.content.ContentFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.ui.TreeUIHelper"
                        serviceImplementation="com.intellij.ui.TreeUIHelperImpl"/>
    <applicationService serviceInterface="com.intellij.ui.ExpandableItemsHandlerFactory"
                        serviceImplementation="com.intellij.ui.ExpandableItemsHandlerFactoryImpl"/>
    <applicationService
      serviceInterface="com.intellij.openapi.ui.messages.MessagesService"
      serviceImplementation="com.intellij.ui.messages.MessagesServiceImpl"/>

    <applicationService serviceImplementation="com.intellij.ui.WinFocusStealer" os="windows" preload="notHeadless"/>


    <applicationService serviceInterface="com.intellij.openapi.editor.ScrollPositionCalculator"
                        serviceImplementation="com.intellij.openapi.editor.impl.ScrollPositionCalculatorImpl"/>

    <applicationService serviceInterface="com.intellij.ui.SystemNotifications"
                        serviceImplementation="com.intellij.ui.SystemNotificationsImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.KeymapGroupFactory"
                        serviceImplementation="com.intellij.openapi.keymap.impl.KeymapGroupFactoryImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.keymap.impl.ActionShortcutRestrictions"
                        serviceImplementation="com.intellij.openapi.keymap.impl.ActionShortcutRestrictionsImpl"/>
    <applicationService serviceInterface="com.intellij.ide.dnd.DnDManager"
                        serviceImplementation="com.intellij.ide.dnd.DnDManagerImpl"
                        headlessImplementation="com.intellij.ide.dnd.HeadlessDnDManager"/>
    <applicationService serviceInterface="com.intellij.openapi.vfs.encoding.EncodingManager"
                        serviceImplementation="com.intellij.openapi.vfs.encoding.EncodingManagerImpl"/>
    <applicationService serviceImplementation="com.intellij.ide.plugins.PluginManagerUISettings"/>
    <postStartupActivity implementation="com.intellij.ide.actions.IdeScalePostStartupActivity"/>

    <applicationService serviceInterface="com.intellij.codeInsight.hint.HintManager"
                        serviceImplementation="com.intellij.codeInsight.hint.HintManagerImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.EditorFactory"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorFactoryImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.EditorActionManager"
                        serviceImplementation="com.intellij.openapi.editor.impl.EditorActionManagerImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.TypedAction"
                        serviceImplementation="com.intellij.openapi.editor.impl.TypedActionImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.editor.actionSystem.LatencyRecorder"
                        serviceImplementation="com.intellij.internal.performance.LatencyRecorderImpl"/>
    <applicationService serviceImplementation="com.intellij.util.text.DateTimeFormatManager"/>

    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.impl.UpdateSettings"/>
    <applicationService serviceImplementation="com.intellij.openapi.updateSettings.UpdateStrategyCustomization"/>


    <applicationService serviceImplementation="com.intellij.openapi.application.IdeUrlTrackingParametersProvider"/>


    <applicationService serviceInterface="com.intellij.execution.process.ColoredOutputTypeRegistry"
                        serviceImplementation="com.intellij.execution.process.ColoredOutputTypeRegistryImpl"/>

    <applicationService serviceInterface="com.intellij.execution.process.ProcessService"
                        serviceImplementation="com.intellij.execution.process.ProcessServiceImpl"/>

    <applicationService serviceInterface="com.intellij.util.io.IoService"
                        serviceImplementation="com.intellij.util.io.IoServiceImpl"/>

    <applicationService serviceInterface="com.intellij.openapi.util.WindowStateService"
                        serviceImplementation="com.intellij.openapi.util.WindowStateApplicationService"/>

    <applicationService serviceInterface="com.intellij.ui.ToolbarService"
                        serviceImplementation="com.intellij.ui.ToolbarServiceImpl"/>
    <applicationService serviceInterface="com.intellij.openapi.application.ReadWriteActionSupport"
                        serviceImplementation="com.intellij.openapi.application.rw.PlatformReadWriteActionSupport"/>
    <applicationService serviceInterface="com.intellij.openapi.application.AsyncExecutionService"
                        serviceImplementation="com.intellij.openapi.application.impl.AsyncExecutionServiceImpl"/>
    <applicationService serviceInterface="com.intellij.notification.NotificationsManager"
                        serviceImplementation="com.intellij.notification.impl.NotificationsManagerImpl"/>

    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.UndoRedoQuickAction"
                        listGroupID="MainToolbarQuickActions.General"/>


    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.BuildQuickAction"
                        listGroupID="MainToolbarQuickActions.Run"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.CoverageQuickAction"
                        listGroupID="MainToolbarQuickActions.Run"/>
    <toolbarQuickAction implementationClass="com.intellij.openapi.wm.impl.headertoolbar.ProfilerQuickAction"
                        listGroupID="MainToolbarQuickActions.Run"/>

    <ideEventQueueDispatcher implementation="com.intellij.ide.ui.laf.LaFMnemonicDispatcher"/>


    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.impl.local.LocalFileSystemImpl" key="file" physical="true"/>
    <virtualFileSystem implementationClass="com.intellij.openapi.vfs.ex.temp.TempFileSystem" key="temp" physical="true"/>
    <!-- Keymap -->
    <applicationConfigurable groupId="root" groupWeight="65" instance="com.intellij.openapi.keymap.impl.ui.KeymapPanel"
                             id="preferences.keymap" key="keymap.display.name"
                             bundle="messages.KeyMapBundle"/>

    <bundledKeymap file="$default.xml"/>
  </extensions>

  <applicationListeners>
    <listener class="com.intellij.ide.plugins.DynamicPluginsFrameStateListener"
              topic="com.intellij.openapi.application.ApplicationActivationListener"/>
    <listener class="com.intellij.ide.actions.CreateLauncherScriptAction$ObsoleteScriptLookupTask"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.ui.mac.MergeAllWindowsAction$RecentProjectsFullScreenTabSupport"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.openapi.vcs.FileStatusFactoryImpl$PluginListener"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    <listener class="com.intellij.openapi.fileTypes.StdFileTypes$StdFileTypesUpdater" activeInHeadlessMode="true" activeInTestMode="false"
              topic="com.intellij.openapi.fileTypes.FileTypeListener"/>
    <listener class="com.intellij.internal.statistic.collectors.fus.TypingEventsLogger$TypingEventsListener" activeInHeadlessMode="true"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener" activeInTestMode="false"/>
    <listener class="com.intellij.internal.statistic.collectors.fus.TypingEventsLogger$TypingLatencyReporter"
              topic="com.intellij.openapi.fileEditor.FileEditorManagerListener" activeInTestMode="false"/>
    <listener class="com.intellij.featureStatistics.StatisticsStateCollectorsTrigger" activeInTestMode="false" activeInHeadlessMode="false"
              topic="com.intellij.ide.AppLifecycleListener"/>
    <listener class="com.intellij.ide.plugins.CreateAllServicesAndExtensionsActivity"
              topic="com.intellij.ide.AppLifecycleListener" activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="com.intellij.ide.actionsOnSave.impl.ActionsOnSaveFileDocumentManagerListener"
              topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
    <listener class="com.intellij.ide.actionsOnSave.impl.CurrentActionListener"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>
    <listener class="com.intellij.ide.trustedProjects.impl.UntrustedProjectNotificationProvider$TrustedListener"
              topic="com.intellij.ide.trustedProjects.TrustedProjectsListener" activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="com.intellij.ide.impl.TrustStateListener$Bridge"
              topic="com.intellij.ide.trustedProjects.TrustedProjectsListener" activeInHeadlessMode="false" activeInTestMode="false"/>
    <listener class="com.intellij.openapi.util.registry.EarlyAccessRegistryManagerListener" activeInTestMode="false"
              topic="com.intellij.openapi.util.registry.RegistryValueListener"/>
    <listener class="com.intellij.ide.ui.experimental.toolbar.ExperimentalToolbarSettings$ToolbarRegistryListener"
              topic="com.intellij.openapi.util.registry.RegistryValueListener"/>
    <listener class="com.intellij.ide.FrameStateManagerAppListener"
              topic="com.intellij.openapi.application.ApplicationActivationListener"/>
    <listener class="com.intellij.openapi.keymap.impl.KeymapFlagsStorageListener"
              topic="com.intellij.openapi.keymap.KeymapManagerListener"/>
    <listener class="com.intellij.ide.actions.IdeScaleSettingsListener" activeInHeadlessMode="false" activeInTestMode="false"
              topic="com.intellij.ide.ui.UISettingsListener"/>
    <listener class="com.intellij.ide.ProjectWindowCustomizerListener"
              topic="com.intellij.ide.ui.UISettingsListener"/>
    <listener class="com.intellij.ui.MacCustomAppIconStartupService" topic="com.intellij.ide.AppLifecycleListener"/>

    <listener class="com.intellij.openapi.editor.actions.ResetFontSizeAppInitListener" topic="com.intellij.ide.AppLifecycleListener"/>

    <listener class="com.intellij.ide.ui.laf.LafAndEditorColorSchemeDynamicPluginListener"
              topic="com.intellij.ide.plugins.DynamicPluginListener"/>

  </applicationListeners>

  <projectListeners>

  </projectListeners>

</idea-plugin>
