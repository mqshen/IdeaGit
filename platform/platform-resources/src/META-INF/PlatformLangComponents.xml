<!--suppress PluginXmlDynamicPlugin -->
<idea-plugin>
  <extensionPoints>
    <!-- only bundled plugin can define extension -->
    <!--suppress PluginXmlDynamicPlugin -->
    <extensionPoint name="registerToolWindowTaskProvider" interface="com.intellij.toolWindow.RegisterToolWindowTaskProvider"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">

    <defaultToolWindowLayout
      id="DefaultToolWindowLayoutPlatformExtension"
      implementation="com.intellij.toolWindow.DefaultToolWindowLayoutPlatformExtension"
      order="first"
    />
    <defaultToolWindowLayout
      implementation="com.intellij.toolWindow.DefaultToolWindowLayoutProviderToExtensionAdapter"
      order="after DefaultToolWindowLayoutPlatformExtension"
    />

    <applicationService serviceInterface="com.intellij.openapi.wm.WindowManager"
                        serviceImplementation="com.intellij.openapi.wm.impl.WindowManagerImpl"
                        headlessImplementation="com.intellij.openapi.wm.impl.TestWindowManager" preload="notHeadless"/>
    <applicationService serviceInterface="com.intellij.ide.DataManager"
                        serviceImplementation="com.intellij.ide.impl.DataManagerImpl"
                        testServiceImplementation="com.intellij.ide.impl.HeadlessDataManager"/>
    <applicationService serviceInterface="com.intellij.openapi.client.ClientSessionsManager"
                        serviceImplementation="com.intellij.openapi.client.ClientAppSessionsManager"/>
    <applicationService serviceInterface="com.intellij.openapi.actionSystem.ActionManager"
                        serviceImplementation="com.intellij.openapi.actionSystem.impl.ActionManagerImpl"/>

    <applicationService serviceInterface="com.intellij.ide.ui.LafManager"
                        serviceImplementation="com.intellij.ide.ui.laf.LafManagerImpl"
                        headlessImplementation="com.intellij.ide.ui.laf.HeadlessLafManagerImpl"/>

  </extensions>

  <!--suppress PluginXmlDynamicPlugin -->
  <module-components>
  </module-components>

  <applicationListeners>
    <listener class="com.intellij.openapi.command.impl.UndoManagerImpl$MyCommandListener"
              topic="com.intellij.openapi.command.CommandListener"/>

    <listener class="com.intellij.openapi.editor.impl.VisibleEditorsTracker$MyCommandListener"
              topic="com.intellij.openapi.command.CommandListener"/>

    <listener class="com.intellij.ide.RecentProjectsManagerBase$MyProjectListener"
              topic="com.intellij.openapi.project.ProjectCloseListener" activeInHeadlessMode="false"/>
    <listener class="com.intellij.ide.RecentProjectsManagerBase$MyFrameStateListener" topic="com.intellij.ide.FrameStateListener"/>

    <listener class="com.intellij.openapi.editor.impl.EditorLastActionTracker$MyAnActionListener"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>


    <listener class="com.intellij.notification.impl.NotificationsConfigurationImpl$MyNotificationListener"
              topic="com.intellij.notification.Notifications"/>

    <listener class="com.intellij.ide.ui.html.GlobalStyleSheetHolder$UpdateListener"
              topic="com.intellij.ide.ui.LafManagerListener" activeInHeadlessMode="false"/>
    <listener class="com.intellij.ide.ui.html.GlobalStyleSheetHolder$UpdateListener"
              topic="com.intellij.openapi.editor.colors.EditorColorsListener" activeInHeadlessMode="false"/>

    <listener class="com.intellij.openapi.editor.actions.ResetFontSizeEditorActionHandler"
              topic="com.intellij.openapi.editor.colors.EditorColorsListener"/>

    <listener class="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageCounterCollector$MyAnActionListener"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>
    <listener class="com.intellij.internal.statistic.EventLogApplicationLifecycleListener" topic="com.intellij.ide.AppLifecycleListener"
              activeInHeadlessMode="true" activeInTestMode="false"/>


    <listener class="com.intellij.internal.performance.LatenciometerListener"
              topic="com.intellij.openapi.editor.actionSystem.LatencyListener"/>

    <listener class="com.intellij.openapi.vfs.newvfs.impl.CachedFileType$PsiListener"
              topic="com.intellij.psi.util.PsiModificationTracker$Listener"/>
    <listener class="com.intellij.openapi.vfs.newvfs.impl.CachedFileType$ReparseListener"
              topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>

    <listener class="com.intellij.ide.IdeTooltipManager$MyRegistryListener"
              topic="com.intellij.openapi.util.registry.RegistryValueListener"/>

    <listener class="com.intellij.openapi.keymap.impl.ModifierKeyDoubleClickHandler$MyAnActionListener"
              topic="com.intellij.openapi.actionSystem.ex.AnActionListener"/>


    <listener class="com.intellij.openapi.vfs.newvfs.persistent.VFSErrorsToFUSReporter"
              topic="com.intellij.ide.AppLifecycleListener"
              activeInHeadlessMode="true"
              activeInTestMode="false" />
  </applicationListeners>
  <projectListeners>
    <listener class="com.intellij.openapi.command.impl.UndoManagerImpl$MyCommandListener"
              topic="com.intellij.openapi.command.CommandListener"/>


    <listener class="com.intellij.internal.statistic.collectors.fus.fileTypes.FileTypeUsageServiceFileEditorManagerListener"
              topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>


    <listener class="com.intellij.psi.search.scope.packageSet.UpdatingScopeOnProjectStructureChangeListener"
              topic="com.intellij.openapi.project.ModuleListener"/>

  </projectListeners>
</idea-plugin>
